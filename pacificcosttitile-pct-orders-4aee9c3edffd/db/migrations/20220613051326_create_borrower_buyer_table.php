<?php
declare(strict_types=1);

use Phinx\Migration\AbstractMigration;

final class CreateBorrowerBuyerTable extends AbstractMigration
{
    /**
     * Change Method.
     *
     * Write your reversible migrations using this method.
     *
     * More information on writing migrations is available here:
     * https://book.cakephp.org/phinx/0/en/migrations.html#the-change-method
     *
     * Remember to call "create()" or "update()" and NOT "save()" when working
     * with the Table class.
     */
    public function change(): void
    {
        $table = $this->table('pct_order_borrower_buyer_info');
        $table->addColumn('order_id', 'integer')
            ->addColumn('property_address', 'string')
            ->addColumn('property_address2', 'string')
            ->addColumn('property_city', 'string')
            ->addColumn('property_state', 'string')
            ->addColumn('property_zip_code', 'string')
            ->addColumn('first_name', 'string')
            ->addColumn('middle_name', 'string')
            ->addColumn('last_name', 'string')
            ->addColumn('phone_number', 'string')
            ->addColumn('email', 'string')
            ->addColumn('second_buyer_first_name', 'string')
            ->addColumn('second_buyer_middle_name', 'string')
            ->addColumn('second_buyer_last_name', 'string')
            ->addColumn('second_buyer_phone_number', 'string')
            ->addColumn('second_buyer_email', 'string')
            ->addColumn('is_same_property_address_as_forwarding_address', 'string')
            ->addColumn('forwarding_street_address', 'string', ['null' => true])
            ->addColumn('forwarding_street_address2', 'string', ['null' => true])
            ->addColumn('forwarding_city', 'string', ['null' => true])
            ->addColumn('forwarding_state', 'string', ['null' => true])
            ->addColumn('forwarding_zip_code', 'string', ['null' => true])
            ->addColumn('vesting_form_date', 'string')
            ->addColumn('vesting_form_signature', 'string')
            ->addColumn('tenant_id', 'string')
            ->addColumn('doc_type', 'string')
            ->addTimestamps()
            ->create();

        $table = $this->table('pct_order_borrower_buyer_escrow_instructions');
        $table->addColumn('order_id', 'integer')
            ->addColumn('is_mortgage', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_liens', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_condominium', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_residence', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_divorced', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_changed', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_death', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_survey', 'enum', ['values' => ['yes','no', 'n/a']])
            ->addColumn('is_structural', 'enum', ['values' => ['yes','no'], 'null' => true])
            ->addColumn('is_insurance', 'enum', ['values' => ['yes','no']])
            ->addColumn('water_service', 'string')
            ->addColumn('other_water_service_name', 'string', ['null' => true])
            ->addColumn('water_service_provider_name', 'string')
            ->addColumn('first_mortgage_company', 'string', ['null' => true])
            ->addColumn('first_mortgage_loan_number', 'string', ['null' => true])
            ->addColumn('first_mortgage_area_code', 'string', ['null' => true])
            ->addColumn('first_mortgage_phone_number', 'string', ['null' => true])
            ->addColumn('second_mortgage_company', 'string', ['null' => true])
            ->addColumn('second_mortgage_loan_number', 'string', ['null' => true])
            ->addColumn('second_mortgage_area_code', 'string', ['null' => true])
            ->addColumn('second_mortgage_phone_number', 'string', ['null' => true])
            ->addColumn('third_mortgage_company', 'string', ['null' => true])
            ->addColumn('third_mortgage_loan_number', 'string', ['null' => true])
            ->addColumn('third_mortgage_area_code', 'string', ['null' => true])
            ->addColumn('third_mortgage_phone_number', 'string', ['null' => true])
            ->addColumn('first_lien_holder_name', 'string', ['null' => true])
            ->addColumn('first_amount_owed', 'string', ['null' => true])
            ->addColumn('second_lien_holder_name', 'string', ['null' => true])
            ->addColumn('second_amount_owed', 'string', ['null' => true])
            ->addColumn('first_homeowners_association', 'string', ['null' => true])
            ->addColumn('first_property_management_company', 'string', ['null' => true])
            ->addColumn('first_property_management_number', 'string', ['null' => true])
            ->addColumn('second_homeowners_association', 'string', ['null' => true])
            ->addColumn('second_property_management_company', 'string', ['null' => true])
            ->addColumn('second_property_management_number', 'string', ['null' => true])
            ->addTimestamps()
            ->create();

        $table = $this->table('pct_order_borrower_buyer_statement_of_info');
        $table->addColumn('order_id', 'integer')
            ->addColumn('sale_proceeds', 'string')
            ->addColumn('name_on_account', 'string', ['null' => true])
            ->addColumn('bank_name', 'string', ['null' => true])
            ->addColumn('bank_city', 'string', ['null' => true])
            ->addColumn('bank_state', 'string', ['null' => true])
            ->addColumn('account_number', 'string', ['null' => true])
            ->addColumn('routing_number', 'string', ['null' => true])
            ->addColumn('street_address_for_account', 'string', ['null' => true])
            ->addColumn('street_address2_for_account', 'string', ['null' => true])
            ->addColumn('city_for_account', 'string', ['null' => true])
            ->addColumn('state_for_account', 'string', ['null' => true])
            ->addColumn('zipcode_for_account', 'string', ['null' => true])
            ->addColumn('closing_proceeds_street_address', 'string', ['null' => true])
            ->addColumn('closing_proceeds_street_address2', 'string', ['null' => true])
            ->addColumn('closing_proceeds_city', 'string', ['null' => true])
            ->addColumn('closing_proceeds_state', 'string', ['null' => true])
            ->addColumn('closing_proceeds_zipcode', 'string', ['null' => true])
            ->addTimestamps()
            ->create();

        $table = $this->table('pct_order_borrower_buyer_preliminary_change_info');
        $table->addColumn('order_id', 'integer')
            ->addColumn('assessors_parcel_number', 'string')
            ->addColumn('transferor', 'string')
            ->addColumn('buyer_daytime_phone_number', 'string')
            ->addColumn('buyer_email_address', 'string')
            ->addColumn('real_property_addres', 'text')
            ->addColumn('is_principal_residence', 'enum', ['values' => ['yes','no']])
            ->addColumn('date_of_occupancy', 'string')
            ->addColumn('is_disabled_veteran', 'enum', ['values' => ['yes','no']])
            ->addColumn('mail_property_tax_name', 'string')
            ->addColumn('mail_property_tax_address', 'string')
            ->addColumn('mail_property_tax_city', 'string')
            ->addColumn('mail_property_tax_state', 'string')
            ->addColumn('mail_property_tax_zipcode', 'string')
            ->addTimestamps()
            ->create();

        $table = $this->table('pct_order_borrower_buyer_transfer_info');
        $table->addColumn('order_id', 'integer')
            ->addColumn('is_transfer_between_spouses', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_transfer_between_domestic_partners', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_transfer', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_parent_child_transfer', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_principal_residence', 'enum', ['values' => ['yes','no']])
            ->addColumn('date_of_death', 'enum', ['values' => ['yes','no']])
            ->addColumn('bank_name', 'string', ['null' => true])
            ->addColumn('is_replace_principal_residence_own', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_replace_principal_residence_own_in_same_county', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_replace_principal_residence_person_disabled', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_replace_principal_residence_person_disabled_in_same_county', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_replace_principal_residence_damaged', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_replace_principal_residence_damaged_in_same_county', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_name_change', 'enum', ['values' => ['yes','no']])
            ->addColumn('name_change_reason', 'string', ['null' => true])
            ->addColumn('is_lender_interest', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_financing_purpose', 'enum', ['values' => ['yes','no']])
            ->addColumn('financing_purpose_reason', 'string', ['null' => true])
            ->addColumn('is_trustee_of_trust', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_transfer_property', 'enum', ['values' => ['yes','no']])
            ->addColumn('benefit', 'string')
            ->addColumn('trustor', 'string')
            ->addColumn('is_subject_to_lease', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_transfer_between_parties', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_subsidized_low_income', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_solar_energy_system', 'enum', ['values' => ['yes','no']])
            ->addColumn('is_transfer_other', 'enum', ['values' => ['yes','no']])
            ->addColumn('other_transfer', 'string', ['null' => true])
            ->addColumn('recording_date', 'string')
            ->addColumn('types_of_transfer', 'string')
            ->addColumn('date_of_contract', 'string')
            ->addColumn('date_of_lease_began', 'string')
            ->addColumn('original_terms_in_year', 'string', ['null' => true])
            ->addColumn('remaining_terms_in_year', 'string', ['null' => true])
            ->addColumn('is_partial_interest', 'enum', ['values' => ['yes','no']])
            ->addColumn('start_percentage_range', 'string', ['null' => true])
            ->addColumn('end_percentage_range', 'string', ['null' => true])
            ->addTimestamps()
            ->create();

        $table = $this->table('pct_order_borrower_buyer_purchase_sale_info');
        $table->addColumn('order_id', 'integer')            
            ->addColumn('total_purchase_price', 'string')
            ->addColumn('cash_down_payment', 'string')
            ->addColumn('first_deed_of_trust_interest', 'string', ['null' => true])
            ->addColumn('first_deed_of_trust_years', 'string', ['null' => true])
            ->addColumn('first_deed_of_trust_monthly_payment', 'string', ['null' => true])
            ->addColumn('first_deed_payment_types', 'string', ['null' => true])
            ->addColumn('first_deed_due_date', 'string', ['null' => true])
            ->addColumn('second_deed_of_trust_interest', 'string', ['null' => true])
            ->addColumn('second_deed_of_trust_years', 'string', ['null' => true])
            ->addColumn('second_deed_of_trust_monthly_payment', 'string', ['null' => true])
            ->addColumn('second_deed_of_trust_amount', 'string', ['null' => true])
            ->addColumn('second_deed_payment_types', 'string', ['null' => true])
            ->addColumn('ballon_payment', 'string', ['null' => true])
            ->addColumn('second_deed_due_date', 'string', ['null' => true])
            ->addColumn('is_financing', 'enum', ['values' => ['yes','no']])
            ->addColumn('outstanding_balance', 'string', ['null' => true])
            ->addColumn('real_estate_commission', 'string', ['null' => true])
            ->addColumn('property_purchase_via', 'string')
            ->addColumn('broker_phone_number', 'string', ['null' => true])
            ->addColumn('property_purchase_via_name', 'string', ['null' => true])
            ->addColumn('broker_name', 'string', ['null' => true])
            ->addColumn('other_through', 'string', ['null' => true])
            ->addColumn('types_of_property_transferred', 'string')
            ->addColumn('num_of_units', 'string', ['null' => true])
            ->addColumn('is_personal_property', 'enum', ['values' => ['yes','no']])
            ->addColumn('peronal_property_value', 'string', ['null' => true])
            ->addColumn('incentives', 'string', ['null' => true])
            ->addColumn('is_manufacture_home_included_in_purchase_price', 'enum', ['values' => ['yes','no']])
            ->addColumn('value_manufacture_home', 'string', ['null' => true])
            ->addColumn('is_manufacture_home_tax', 'enum', ['values' => ['yes','no']])
            ->addColumn('deal_number', 'string', ['null' => true])
            ->addColumn('is_property_produce_income', 'enum', ['values' => ['yes','no']])
            ->addColumn('income_type', 'string', ['null' => true])
            ->addColumn('other_income_type', 'string', ['null' => true])
            ->addColumn('property_condition', 'string')
            ->addColumn('property_condition_describe', 'string', ['null' => true])
            ->addColumn('signature_corporate_officer_date', 'string')
            ->addColumn('corporate_officer_telephone', 'string')
            ->addColumn('corporate_officer_name', 'string')
            ->addColumn('corporate_officer_email', 'string')
            ->addTimestamps()
            ->create();
       
    }
}
