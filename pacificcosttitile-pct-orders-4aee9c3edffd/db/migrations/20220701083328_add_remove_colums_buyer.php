<?php
declare(strict_types=1);

use Phinx\Migration\AbstractMigration;
use Phinx\Db\Adapter\MysqlAdapter;

final class AddRemoveColumsBuyer extends AbstractMigration
{
    /**
     * Change Method.
     *
     * Write your reversible migrations using this method.
     *
     * More information on writing migrations is available here:
     * https://book.cakephp.org/phinx/0/en/migrations.html#the-change-method
     *
     * Remember to call "create()" or "update()" and NOT "save()" when working
     * with the Table class.
     */
    public function change(): void
    {
        $table = $this->table('pct_order_borrower_buyer_info');
		$table->removeColumn('first_name')
            ->removeColumn('middle_name')
            ->removeColumn('last_name')
            ->removeColumn('phone_number')
            ->removeColumn('email')
            ->removeColumn('second_buyer_first_name')
            ->removeColumn('second_buyer_middle_name')
            ->removeColumn('second_buyer_last_name')
            ->removeColumn('second_buyer_phone_number')
            ->removeColumn('second_buyer_email')
            ->removeColumn('is_same_property_address_as_forwarding_address')
            ->removeColumn('forwarding_street_address')
            ->removeColumn('forwarding_street_address2')
            ->removeColumn('forwarding_city')
            ->removeColumn('forwarding_state')
            ->removeColumn('forwarding_zip_code')
            ->addColumn('buyer_full_name', 'string', ['after' => 'property_zip_code'])
            ->addColumn('buyer_home_number', 'string', ['after' => 'buyer_full_name'])
            ->addColumn('buyer_work_number', 'string', ['after' => 'buyer_home_number'])
            ->addColumn('buyer_email_address', 'string', ['after' => 'buyer_work_number'])
            ->addColumn('buyer_fax_number', 'string', ['after' => 'buyer_email_address'])
            ->addColumn('buyer_ssn', 'string', ['after' => 'buyer_fax_number'])
            ->addColumn('buyer_current_mailing_address', 'text', ['limit' => MysqlAdapter::TEXT_LONG, 'after' => 'buyer_ssn'])
            ->addColumn('buyer_mailing_address_after_close', 'text', ['limit' => MysqlAdapter::TEXT_LONG, 'after' => 'buyer_current_mailing_address'])
            ->addColumn('lender_name', 'string', ['after' => 'buyer_mailing_address_after_close'])
            ->addColumn('lender_address', 'text', ['limit' => MysqlAdapter::TEXT_LONG, 'after' => 'lender_name'])
            ->addColumn('agent_name', 'string', ['after' => 'lender_address'])
            ->addColumn('agent_phone_number', 'string', ['after' => 'agent_name'])
            ->addColumn('second_lender_name', 'string', ['after' => 'agent_phone_number', 'null' => true])
            ->addColumn('seond_lender_address', 'text', ['limit' => MysqlAdapter::TEXT_LONG, 'after' => 'second_lender_name', 'null' => true])
            ->addColumn('second_agent_name', 'string', ['after' => 'seond_lender_address', 'null' => true])
            ->addColumn('seond_agent_phone_number', 'string', ['after' => 'second_agent_name', 'null' => true])
            ->addColumn('insurance_name', 'string', ['after' => 'seond_agent_phone_number'])
            ->addColumn('insurance_phone_number', 'string', ['after' => 'insurance_name'])
            ->addColumn('insurance_address', 'text', ['limit' => MysqlAdapter::TEXT_LONG, 'after' => 'insurance_phone_number'])
            ->addColumn('insurance_company', 'string', ['after' => 'insurance_address'])
            ->addColumn('buyer_date', 'string', ['after' => 'insurance_company'])
            ->addColumn('buyer_signature', 'string', ['after' => 'buyer_date'])
            ->addColumn('names', 'string', ['after' => 'vesting_form_signature'])
            ->addColumn('pick_ups', 'string', ['after' => 'names', 'null' => true])
            ->addColumn('names_of_spouse', 'string', ['after' => 'pick_ups'])
            ->addColumn('appropriate_choice', 'string', ['after' => 'names_of_spouse', 'null' => true])
            ->addColumn('partnership_name', 'string', ['after' => 'appropriate_choice', 'null' => true])
            ->addColumn('corporation_name', 'string', ['after' => 'partnership_name', 'null' => true])
			->update();

            $table = $this->table('pct_order_borrower_buyer_statement_of_info');
            $table->removeColumn('sale_proceeds')
                ->removeColumn('name_on_account')
                ->removeColumn('bank_name')
                ->removeColumn('bank_city')
                ->removeColumn('bank_state')
                ->removeColumn('account_number')
                ->removeColumn('routing_number')
                ->removeColumn('street_address_for_account')
                ->removeColumn('street_address2_for_account')
                ->removeColumn('city_for_account')
                ->removeColumn('state_for_account')
                ->removeColumn('zipcode_for_account')
                ->removeColumn('closing_proceeds_street_address')
                ->removeColumn('closing_proceeds_street_address2')
                ->removeColumn('closing_proceeds_city')
                ->removeColumn('closing_proceeds_state')
                ->removeColumn('closing_proceeds_zipcode')
                ->addColumn('first_name', 'string', ['after' => 'order_id'])
                ->addColumn('middle_name', 'string', ['after' => 'first_name'])
                ->addColumn('last_name', 'string', ['after' => 'middle_name'])
                ->addColumn('maiden_name', 'string', ['after' => 'last_name'])
                ->addColumn('date_of_birth', 'string', ['after' => 'maiden_name'])
                ->addColumn('home_phone_number', 'string', ['after' => 'date_of_birth'])
                ->addColumn('business_phone_number', 'string', ['after' => 'home_phone_number'])
                ->addColumn('birthplace', 'string', ['after' => 'business_phone_number'])
                ->addColumn('ssn', 'string', ['after' => 'birthplace'])
                ->addColumn('driver_license_no', 'string', ['after' => 'ssn'])
                ->addColumn('another_name_that_used', 'string', ['after' => 'driver_license_no'])
                ->addColumn('residence_state', 'string', ['after' => 'another_name_that_used'])
                ->addColumn('lived_year', 'string', ['after' => 'residence_state'])
                ->addColumn('is_married', 'string', ['after' => 'lived_year'])
                ->addColumn('spouse_first_name', 'string', ['after' => 'is_married', 'null' => true])
                ->addColumn('spouse_middle_name', 'string', ['after' => 'spouse_first_name', 'null' => true])
                ->addColumn('spouse_last_name', 'string', ['after' => 'spouse_middle_name', 'null' => true])
                ->addColumn('spouse_maiden_name', 'string', ['after' => 'spouse_last_name', 'null' => true])
                ->addColumn('spouse_date_of_birth', 'string', ['after' => 'spouse_maiden_name', 'null' => true])
                ->addColumn('spouse_home_phone_number', 'string', ['after' => 'spouse_date_of_birth', 'null' => true])
                ->addColumn('spouse_business_phone_number', 'string', ['after' => 'spouse_home_phone_number', 'null' => true])
                ->addColumn('spouse_birthplace', 'string', ['after' => 'spouse_business_phone_number', 'null' => true])
                ->addColumn('spouse_ssn', 'string', ['after' => 'spouse_birthplace', 'null' => true])
                ->addColumn('spouse_driver_license_no', 'string', ['after' => 'spouse_ssn', 'null' => true])
                ->addColumn('spouse_another_name_that_used', 'string', ['after' => 'spouse_driver_license_no', 'null' => true])
                ->addColumn('spouse_state_residence', 'string', ['after' => 'spouse_another_name_that_used', 'null' => true])
                ->addColumn('spouse_lived_year', 'string', ['after' => 'spouse_state_residence', 'null' => true])
                ->addColumn('is_domestic_partner', 'string', ['after' => 'spouse_lived_year', 'null' => true]) 
                ->addColumn('domestic_first_name', 'string', ['after' => 'is_domestic_partner', 'null' => true])
                ->addColumn('domestic_middle_name', 'string', ['after' => 'domestic_first_name', 'null' => true])
                ->addColumn('domestic_last_name', 'string', ['after' => 'domestic_middle_name', 'null' => true])
                ->addColumn('domestic_maiden_name', 'string', ['after' => 'domestic_last_name', 'null' => true])
                ->addColumn('domestic_date_of_birth', 'string', ['after' => 'domestic_maiden_name', 'null' => true])
                ->addColumn('domestic_home_phone_number', 'string', ['after' => 'domestic_date_of_birth', 'null' => true])
                ->addColumn('domestic_business_phone_number', 'string', ['after' => 'domestic_home_phone_number', 'null' => true])
                ->addColumn('domestic_birthplace', 'string', ['after' => 'domestic_business_phone_number', 'null' => true])
                ->addColumn('domestic_ssn', 'string', ['after' => 'domestic_birthplace', 'null' => true])
                ->addColumn('domestic_driver_license_no', 'string', ['after' => 'domestic_ssn', 'null' => true])
                ->addColumn('domestic_another_name_that_used', 'string', ['after' => 'domestic_driver_license_no', 'null' => true])
                ->addColumn('domestic_state_residence', 'string', ['after' => 'domestic_another_name_that_used', 'null' => true])
                ->addColumn('domestic_lived_year', 'string', ['after' => 'domestic_state_residence', 'null' => true])
                ->addColumn('residence_number_street', 'string', ['after' => 'domestic_lived_year'])
                ->addColumn('residence_city', 'string', ['after' => 'residence_number_street'])
                ->addColumn('residence_from_date_to_date', 'string', ['after' => 'residence_city'])
                ->addColumn('second_residence_number_street', 'string', ['after' => 'residence_from_date_to_date', 'null' => true])
                ->addColumn('second_residence_city', 'string', ['after' => 'second_residence_number_street', 'null' => true])
                ->addColumn('second_residence_from_date_to_date', 'string', ['after' => 'second_residence_city', 'null' => true])
                ->addColumn('is_buyer_intends', 'string', ['after' => 'second_residence_from_date_to_date'])
                ->addColumn('owner_street_address', 'string', ['after' => 'is_buyer_intends'])
                ->addColumn('unimproved', 'string', ['after' => 'owner_street_address', 'null' => true])
                ->addColumn('single_family', 'string', ['after' => 'unimproved', 'null' => true])
                ->addColumn('condo_unit', 'string', ['after' => 'single_family', 'null' => true])
                ->addColumn('other', 'string', ['after' => 'condo_unit', 'null' => true])
                ->addColumn('is_improvement', 'string', ['after' => 'other'])
                ->addColumn('is_materials', 'string', ['after' => 'is_improvement'])
                ->addColumn('is_loan', 'string', ['after' => 'is_materials', 'null' => true])
                ->addColumn('lender', 'string', ['after' => 'is_loan', 'null' => true])
                ->addColumn('loan_amount', 'string', ['after' => 'lender', 'null' => true])
                ->addColumn('loan_account', 'string', ['after' => 'loan_amount', 'null' => true])
                ->addColumn('second_lender', 'string', ['after' => 'loan_account', 'null' => true])
                ->addColumn('second_loan_amount', 'string', ['after' => 'second_lender', 'null' => true])
                ->addColumn('second_loan_account', 'string', ['after' => 'second_loan_amount', 'null' => true])
                ->addColumn('executed_date', 'string', ['after' => 'second_loan_account'])
                ->addColumn('executed_year', 'string', ['after' => 'executed_date'])
                ->addColumn('executed_time', 'string', ['after' => 'executed_year'])
                ->addColumn('signature', 'string', ['after' => 'executed_time'])
                ->addColumn('second_signature', 'string', ['after' => 'signature'])
                ->update();
    }
}
